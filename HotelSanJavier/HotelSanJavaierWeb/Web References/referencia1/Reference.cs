//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HotelSanJavaierWeb.referencia1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HotelSanJavierSoap", Namespace="http://tempuri.org/")]
    public partial class HotelSanJavier : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceptionistOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceptionistByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginReceptionistOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReservetionsByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReservetionsByReceptionistOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllReservetionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback addReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRecepcionistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editRecepcionistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback editReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRecepcionistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeReservationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HotelSanJavier() {
            this.Url = global::HotelSanJavaierWeb.Properties.Settings.Default.HotelSanJavaierWeb_referencia1_HotelSanJavier;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getClientsCompletedEventHandler getClientsCompleted;
        
        /// <remarks/>
        public event loginClientCompletedEventHandler loginClientCompleted;
        
        /// <remarks/>
        public event getClientCompletedEventHandler getClientCompleted;
        
        /// <remarks/>
        public event getReceptionistCompletedEventHandler getReceptionistCompleted;
        
        /// <remarks/>
        public event getReceptionistByIdCompletedEventHandler getReceptionistByIdCompleted;
        
        /// <remarks/>
        public event loginReceptionistCompletedEventHandler loginReceptionistCompleted;
        
        /// <remarks/>
        public event getReservetionsByClientCompletedEventHandler getReservetionsByClientCompleted;
        
        /// <remarks/>
        public event getReservetionsByReceptionistCompletedEventHandler getReservetionsByReceptionistCompleted;
        
        /// <remarks/>
        public event getAllReservetionsCompletedEventHandler getAllReservetionsCompleted;
        
        /// <remarks/>
        public event addClientCompletedEventHandler addClientCompleted;
        
        /// <remarks/>
        public event addReservationCompletedEventHandler addReservationCompleted;
        
        /// <remarks/>
        public event addRecepcionistsCompletedEventHandler addRecepcionistsCompleted;
        
        /// <remarks/>
        public event editRecepcionistsCompletedEventHandler editRecepcionistsCompleted;
        
        /// <remarks/>
        public event editClientCompletedEventHandler editClientCompleted;
        
        /// <remarks/>
        public event editReservationCompletedEventHandler editReservationCompleted;
        
        /// <remarks/>
        public event removeRecepcionistsCompletedEventHandler removeRecepcionistsCompleted;
        
        /// <remarks/>
        public event removeClientCompletedEventHandler removeClientCompleted;
        
        /// <remarks/>
        public event removeReservationCompletedEventHandler removeReservationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getClients() {
            object[] results = this.Invoke("getClients", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getClientsAsync() {
            this.getClientsAsync(null);
        }
        
        /// <remarks/>
        public void getClientsAsync(object userState) {
            if ((this.getClientsOperationCompleted == null)) {
                this.getClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientsOperationCompleted);
            }
            this.InvokeAsync("getClients", new object[0], this.getClientsOperationCompleted, userState);
        }
        
        private void OngetClientsOperationCompleted(object arg) {
            if ((this.getClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientsCompleted(this, new getClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/loginClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool loginClient(string dni, string password) {
            object[] results = this.Invoke("loginClient", new object[] {
                        dni,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginClientAsync(string dni, string password) {
            this.loginClientAsync(dni, password, null);
        }
        
        /// <remarks/>
        public void loginClientAsync(string dni, string password, object userState) {
            if ((this.loginClientOperationCompleted == null)) {
                this.loginClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginClientOperationCompleted);
            }
            this.InvokeAsync("loginClient", new object[] {
                        dni,
                        password}, this.loginClientOperationCompleted, userState);
        }
        
        private void OnloginClientOperationCompleted(object arg) {
            if ((this.loginClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginClientCompleted(this, new loginClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getClient(string dni) {
            object[] results = this.Invoke("getClient", new object[] {
                        dni});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getClientAsync(string dni) {
            this.getClientAsync(dni, null);
        }
        
        /// <remarks/>
        public void getClientAsync(string dni, object userState) {
            if ((this.getClientOperationCompleted == null)) {
                this.getClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientOperationCompleted);
            }
            this.InvokeAsync("getClient", new object[] {
                        dni}, this.getClientOperationCompleted, userState);
        }
        
        private void OngetClientOperationCompleted(object arg) {
            if ((this.getClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientCompleted(this, new getClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReceptionist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReceptionist(string dni) {
            object[] results = this.Invoke("getReceptionist", new object[] {
                        dni});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReceptionistAsync(string dni) {
            this.getReceptionistAsync(dni, null);
        }
        
        /// <remarks/>
        public void getReceptionistAsync(string dni, object userState) {
            if ((this.getReceptionistOperationCompleted == null)) {
                this.getReceptionistOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceptionistOperationCompleted);
            }
            this.InvokeAsync("getReceptionist", new object[] {
                        dni}, this.getReceptionistOperationCompleted, userState);
        }
        
        private void OngetReceptionistOperationCompleted(object arg) {
            if ((this.getReceptionistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceptionistCompleted(this, new getReceptionistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReceptionistById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReceptionistById(string id) {
            object[] results = this.Invoke("getReceptionistById", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReceptionistByIdAsync(string id) {
            this.getReceptionistByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void getReceptionistByIdAsync(string id, object userState) {
            if ((this.getReceptionistByIdOperationCompleted == null)) {
                this.getReceptionistByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceptionistByIdOperationCompleted);
            }
            this.InvokeAsync("getReceptionistById", new object[] {
                        id}, this.getReceptionistByIdOperationCompleted, userState);
        }
        
        private void OngetReceptionistByIdOperationCompleted(object arg) {
            if ((this.getReceptionistByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceptionistByIdCompleted(this, new getReceptionistByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/loginReceptionist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool loginReceptionist(string dni, string password) {
            object[] results = this.Invoke("loginReceptionist", new object[] {
                        dni,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginReceptionistAsync(string dni, string password) {
            this.loginReceptionistAsync(dni, password, null);
        }
        
        /// <remarks/>
        public void loginReceptionistAsync(string dni, string password, object userState) {
            if ((this.loginReceptionistOperationCompleted == null)) {
                this.loginReceptionistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginReceptionistOperationCompleted);
            }
            this.InvokeAsync("loginReceptionist", new object[] {
                        dni,
                        password}, this.loginReceptionistOperationCompleted, userState);
        }
        
        private void OnloginReceptionistOperationCompleted(object arg) {
            if ((this.loginReceptionistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginReceptionistCompleted(this, new loginReceptionistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReservetionsByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReservetionsByClient(string dniClient) {
            object[] results = this.Invoke("getReservetionsByClient", new object[] {
                        dniClient});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReservetionsByClientAsync(string dniClient) {
            this.getReservetionsByClientAsync(dniClient, null);
        }
        
        /// <remarks/>
        public void getReservetionsByClientAsync(string dniClient, object userState) {
            if ((this.getReservetionsByClientOperationCompleted == null)) {
                this.getReservetionsByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservetionsByClientOperationCompleted);
            }
            this.InvokeAsync("getReservetionsByClient", new object[] {
                        dniClient}, this.getReservetionsByClientOperationCompleted, userState);
        }
        
        private void OngetReservetionsByClientOperationCompleted(object arg) {
            if ((this.getReservetionsByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservetionsByClientCompleted(this, new getReservetionsByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReservetionsByReceptionist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReservetionsByReceptionist(string idReceptionist) {
            object[] results = this.Invoke("getReservetionsByReceptionist", new object[] {
                        idReceptionist});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReservetionsByReceptionistAsync(string idReceptionist) {
            this.getReservetionsByReceptionistAsync(idReceptionist, null);
        }
        
        /// <remarks/>
        public void getReservetionsByReceptionistAsync(string idReceptionist, object userState) {
            if ((this.getReservetionsByReceptionistOperationCompleted == null)) {
                this.getReservetionsByReceptionistOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservetionsByReceptionistOperationCompleted);
            }
            this.InvokeAsync("getReservetionsByReceptionist", new object[] {
                        idReceptionist}, this.getReservetionsByReceptionistOperationCompleted, userState);
        }
        
        private void OngetReservetionsByReceptionistOperationCompleted(object arg) {
            if ((this.getReservetionsByReceptionistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservetionsByReceptionistCompleted(this, new getReservetionsByReceptionistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllReservetions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllReservetions() {
            object[] results = this.Invoke("getAllReservetions", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllReservetionsAsync() {
            this.getAllReservetionsAsync(null);
        }
        
        /// <remarks/>
        public void getAllReservetionsAsync(object userState) {
            if ((this.getAllReservetionsOperationCompleted == null)) {
                this.getAllReservetionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllReservetionsOperationCompleted);
            }
            this.InvokeAsync("getAllReservetions", new object[0], this.getAllReservetionsOperationCompleted, userState);
        }
        
        private void OngetAllReservetionsOperationCompleted(object arg) {
            if ((this.getAllReservetionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllReservetionsCompleted(this, new getAllReservetionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addClient(string dni, string password, int telephone, string name, string surname, string email) {
            this.Invoke("addClient", new object[] {
                        dni,
                        password,
                        telephone,
                        name,
                        surname,
                        email});
        }
        
        /// <remarks/>
        public void addClientAsync(string dni, string password, int telephone, string name, string surname, string email) {
            this.addClientAsync(dni, password, telephone, name, surname, email, null);
        }
        
        /// <remarks/>
        public void addClientAsync(string dni, string password, int telephone, string name, string surname, string email, object userState) {
            if ((this.addClientOperationCompleted == null)) {
                this.addClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddClientOperationCompleted);
            }
            this.InvokeAsync("addClient", new object[] {
                        dni,
                        password,
                        telephone,
                        name,
                        surname,
                        email}, this.addClientOperationCompleted, userState);
        }
        
        private void OnaddClientOperationCompleted(object arg) {
            if ((this.addClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addReservation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addReservation(string dni_client, int id_receptionist, string entry_date, string exit_date, int id_room) {
            this.Invoke("addReservation", new object[] {
                        dni_client,
                        id_receptionist,
                        entry_date,
                        exit_date,
                        id_room});
        }
        
        /// <remarks/>
        public void addReservationAsync(string dni_client, int id_receptionist, string entry_date, string exit_date, int id_room) {
            this.addReservationAsync(dni_client, id_receptionist, entry_date, exit_date, id_room, null);
        }
        
        /// <remarks/>
        public void addReservationAsync(string dni_client, int id_receptionist, string entry_date, string exit_date, int id_room, object userState) {
            if ((this.addReservationOperationCompleted == null)) {
                this.addReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddReservationOperationCompleted);
            }
            this.InvokeAsync("addReservation", new object[] {
                        dni_client,
                        id_receptionist,
                        entry_date,
                        exit_date,
                        id_room}, this.addReservationOperationCompleted, userState);
        }
        
        private void OnaddReservationOperationCompleted(object arg) {
            if ((this.addReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addReservationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addRecepcionists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addRecepcionists(string name, string surname, string dni, int rol, string password) {
            this.Invoke("addRecepcionists", new object[] {
                        name,
                        surname,
                        dni,
                        rol,
                        password});
        }
        
        /// <remarks/>
        public void addRecepcionistsAsync(string name, string surname, string dni, int rol, string password) {
            this.addRecepcionistsAsync(name, surname, dni, rol, password, null);
        }
        
        /// <remarks/>
        public void addRecepcionistsAsync(string name, string surname, string dni, int rol, string password, object userState) {
            if ((this.addRecepcionistsOperationCompleted == null)) {
                this.addRecepcionistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRecepcionistsOperationCompleted);
            }
            this.InvokeAsync("addRecepcionists", new object[] {
                        name,
                        surname,
                        dni,
                        rol,
                        password}, this.addRecepcionistsOperationCompleted, userState);
        }
        
        private void OnaddRecepcionistsOperationCompleted(object arg) {
            if ((this.addRecepcionistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRecepcionistsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editRecepcionists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editRecepcionists() {
            this.Invoke("editRecepcionists", new object[0]);
        }
        
        /// <remarks/>
        public void editRecepcionistsAsync() {
            this.editRecepcionistsAsync(null);
        }
        
        /// <remarks/>
        public void editRecepcionistsAsync(object userState) {
            if ((this.editRecepcionistsOperationCompleted == null)) {
                this.editRecepcionistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditRecepcionistsOperationCompleted);
            }
            this.InvokeAsync("editRecepcionists", new object[0], this.editRecepcionistsOperationCompleted, userState);
        }
        
        private void OneditRecepcionistsOperationCompleted(object arg) {
            if ((this.editRecepcionistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editRecepcionistsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editClient() {
            this.Invoke("editClient", new object[0]);
        }
        
        /// <remarks/>
        public void editClientAsync() {
            this.editClientAsync(null);
        }
        
        /// <remarks/>
        public void editClientAsync(object userState) {
            if ((this.editClientOperationCompleted == null)) {
                this.editClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditClientOperationCompleted);
            }
            this.InvokeAsync("editClient", new object[0], this.editClientOperationCompleted, userState);
        }
        
        private void OneditClientOperationCompleted(object arg) {
            if ((this.editClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editReservation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editReservation() {
            this.Invoke("editReservation", new object[0]);
        }
        
        /// <remarks/>
        public void editReservationAsync() {
            this.editReservationAsync(null);
        }
        
        /// <remarks/>
        public void editReservationAsync(object userState) {
            if ((this.editReservationOperationCompleted == null)) {
                this.editReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditReservationOperationCompleted);
            }
            this.InvokeAsync("editReservation", new object[0], this.editReservationOperationCompleted, userState);
        }
        
        private void OneditReservationOperationCompleted(object arg) {
            if ((this.editReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editReservationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeRecepcionists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeRecepcionists() {
            this.Invoke("removeRecepcionists", new object[0]);
        }
        
        /// <remarks/>
        public void removeRecepcionistsAsync() {
            this.removeRecepcionistsAsync(null);
        }
        
        /// <remarks/>
        public void removeRecepcionistsAsync(object userState) {
            if ((this.removeRecepcionistsOperationCompleted == null)) {
                this.removeRecepcionistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRecepcionistsOperationCompleted);
            }
            this.InvokeAsync("removeRecepcionists", new object[0], this.removeRecepcionistsOperationCompleted, userState);
        }
        
        private void OnremoveRecepcionistsOperationCompleted(object arg) {
            if ((this.removeRecepcionistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRecepcionistsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeClient() {
            this.Invoke("removeClient", new object[0]);
        }
        
        /// <remarks/>
        public void removeClientAsync() {
            this.removeClientAsync(null);
        }
        
        /// <remarks/>
        public void removeClientAsync(object userState) {
            if ((this.removeClientOperationCompleted == null)) {
                this.removeClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveClientOperationCompleted);
            }
            this.InvokeAsync("removeClient", new object[0], this.removeClientOperationCompleted, userState);
        }
        
        private void OnremoveClientOperationCompleted(object arg) {
            if ((this.removeClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeReservation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeReservation() {
            this.Invoke("removeReservation", new object[0]);
        }
        
        /// <remarks/>
        public void removeReservationAsync() {
            this.removeReservationAsync(null);
        }
        
        /// <remarks/>
        public void removeReservationAsync(object userState) {
            if ((this.removeReservationOperationCompleted == null)) {
                this.removeReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveReservationOperationCompleted);
            }
            this.InvokeAsync("removeReservation", new object[0], this.removeReservationOperationCompleted, userState);
        }
        
        private void OnremoveReservationOperationCompleted(object arg) {
            if ((this.removeReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeReservationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getClientsCompletedEventHandler(object sender, getClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginClientCompletedEventHandler(object sender, loginClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getClientCompletedEventHandler(object sender, getClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReceptionistCompletedEventHandler(object sender, getReceptionistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceptionistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceptionistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReceptionistByIdCompletedEventHandler(object sender, getReceptionistByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceptionistByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceptionistByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginReceptionistCompletedEventHandler(object sender, loginReceptionistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginReceptionistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginReceptionistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReservetionsByClientCompletedEventHandler(object sender, getReservetionsByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReservetionsByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReservetionsByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReservetionsByReceptionistCompletedEventHandler(object sender, getReservetionsByReceptionistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReservetionsByReceptionistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReservetionsByReceptionistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllReservetionsCompletedEventHandler(object sender, getAllReservetionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllReservetionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllReservetionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addReservationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addRecepcionistsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void editRecepcionistsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void editClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void editReservationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removeRecepcionistsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removeClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removeReservationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591